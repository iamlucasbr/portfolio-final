name: Deploy Portfolio to Hostinger

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Limpar a pasta 'out' antiga
        run: rm -rf out

      - name: Criar next.config.js para Produção
        run: |
          cat << EOT > next.config.js
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            images: {
              unoptimized: true,
            },
          };

          module.exports = nextConfig;
          EOT

      - name: Build project
        run: npm run build

      - name: Listar conteúdo da pasta 'out'
        run: ls -R out

      # --- A SOLUÇÃO FINAL (DE VERDADE) ---
      # Trocamos a action MENTIROSA (SamKirkland)
      # por esta, que é a mais popular e funciona.
      # O nome está CORRETO (appleboy/ftp-deploy@v3).
      - name: Deploy to FTP
        uses: appleboy/ftp-deploy@v3
        with:
          host: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          
          # 1. Pega o conteúdo da pasta 'out' (que está cheia)
          local_root: out/
          # 2. Envia para o diretório raiz (que é a public_html)
          remote_root: ./
          # 3. Deleta tudo que está lá antes de enviar
          delete: true